<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="pipeline_8cpp" kind="file" language="C++">
    <compoundname>pipeline.cpp</compoundname>
    <includes refid="pipeline_8hpp" local="yes">pipeline.hpp</includes>
    <includes local="no">cassert</includes>
    <includes local="no">fstream</includes>
    <includes local="no">iosfwd</includes>
    <includes local="no">iostream</includes>
    <includes local="no">stdexcept</includes>
    <includes refid="model_8hpp" local="yes">../model/model.hpp</includes>
    <includes refid="device_8hpp" local="yes">../device/device.hpp</includes>
    <incdepgraph>
      <node id="6">
        <label>GLFW/glfw3.h</label>
      </node>
      <node id="3">
        <label>../device/device.hpp</label>
        <link refid="device_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>../model/model.hpp</label>
        <link refid="model_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>pipeline.cpp</label>
        <link refid="pipeline_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>pipeline.hpp</label>
        <link refid="pipeline_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>../window/window.hpp</label>
        <link refid="window_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>cassert</label>
      </node>
      <node id="10">
        <label>fstream</label>
      </node>
      <node id="15">
        <label>glm/glm.hpp</label>
      </node>
      <node id="11">
        <label>iosfwd</label>
      </node>
      <node id="12">
        <label>iostream</label>
      </node>
      <node id="13">
        <label>stdexcept</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
      <node id="4">
        <label>vulkan/vulkan.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_blocky_vulkan">BlockyVulkan</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pipeline_8hpp" kindref="compound">pipeline.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iosfwd&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="model_8hpp" kindref="compound">../model/model.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="device_8hpp" kindref="compound">../device/device.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_blocky_vulkan" kindref="compound">BlockyVulkan</ref><sp/>{</highlight></codeline>
<codeline lineno="13" refid="class_blocky_vulkan_1_1_pipeline_1a70c74fc3f16b6407d062f1b284e0dff0" refkind="member"><highlight class="normal"><ref refid="class_blocky_vulkan_1_1_pipeline_1addb66f814dfdcf5ab9e8c1c394e95abb" kindref="member">Pipeline::Pipeline</ref>(<sp/><ref refid="class_blocky_vulkan_1_1_device" kindref="compound">BlockyVulkan::Device</ref><sp/>&amp;device,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;vertFilePath,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;fragFilePath,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_blocky_vulkan_1_1_pipeline_config_info" kindref="compound">PipelineConfigInfo</ref><sp/>configInfo<sp/>)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_blocky_vulkan_1_1_device" kindref="compound">Device</ref>(<sp/>device<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>CreateGraphicsPipeline(<sp/>vertFilePath,<sp/>fragFilePath,<sp/>configInfo<sp/>);</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="class_blocky_vulkan_1_1_pipeline_1a6bd38169705e7b71be2ce6300e8c3cab" refkind="member"><highlight class="normal"><ref refid="class_blocky_vulkan_1_1_pipeline_1a6bd38169705e7b71be2ce6300e8c3cab" kindref="member">Pipeline::~Pipeline</ref>()<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDestroyShaderModule(<sp/><ref refid="class_blocky_vulkan_1_1_device" kindref="compound">Device</ref>.<ref refid="class_blocky_vulkan_1_1_device_1abd0f1af74c6907d4354112e1291db9aa" kindref="member">device</ref>(),<sp/>vertShaderModule,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDestroyShaderModule(<sp/><ref refid="class_blocky_vulkan_1_1_device" kindref="compound">Device</ref>.<ref refid="class_blocky_vulkan_1_1_device_1abd0f1af74c6907d4354112e1291db9aa" kindref="member">device</ref>(),<sp/>fragShaderModule,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>vkDestroyPipeline(<sp/><ref refid="class_blocky_vulkan_1_1_device" kindref="compound">Device</ref>.<ref refid="class_blocky_vulkan_1_1_device_1abd0f1af74c6907d4354112e1291db9aa" kindref="member">device</ref>(),<sp/>graphicsPipeline,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">std::vector&lt;char&gt;<sp/>Pipeline::ReadFile(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;filePath<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ifstream<sp/>file{<sp/>filePath,<sp/>std::ios::ate<sp/>|<sp/>std::ios::binary<sp/>};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!file.is_open()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>file:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>filePath<sp/>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>fileSize<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>file.tellg()<sp/>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;char&gt;<sp/>buffer(<sp/>fileSize<sp/>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>file.seekg(<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>file.read(<sp/>buffer.data(),<sp/>fileSize<sp/>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>file.close();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Pipeline::CreateGraphicsPipeline(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;vertFilePath,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;fragFilePath,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PipelineConfigInfo<sp/>&amp;configInfo<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>configInfo.pipelineLayout<sp/>!=<sp/>VK_NULL_HANDLE<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>create<sp/>graphics<sp/>pipeline:<sp/>No<sp/>pipelineLayout<sp/>provided!<sp/>(at<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;configInfo)&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<sp/>configInfo.renderPass<sp/>!=<sp/>VK_NULL_HANDLE<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>create<sp/>graphics<sp/>pipeline:<sp/>No<sp/>renderPass<sp/>provided!<sp/>(at<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;configInfo)&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>vertCode<sp/>=<sp/>ReadFile(<sp/>vertFilePath<sp/>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fragCode<sp/>=<sp/>ReadFile(<sp/>fragFilePath<sp/>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Vert<sp/>Shader<sp/>Code<sp/>Size:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>vertCode.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Frag<sp/>Shader<sp/>Code<sp/>Size:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fragCode.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>CreateShaderModule(<sp/>vertCode,<sp/>&amp;vertShaderModule<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>CreateShaderModule(<sp/>fragCode,<sp/>&amp;fragShaderModule<sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setting<sp/>up<sp/>shader<sp/>stages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>VkPipelineShaderStageCreateInfo<sp/>shaderStages[<sp/>2<sp/>];</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vertex<sp/>shader<sp/>stage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>shaderStages[<sp/>0<sp/>].sType<sp/>=<sp/>VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>shaderStages[<sp/>0<sp/>].stage<sp/>=<sp/>VK_SHADER_STAGE_VERTEX_BIT;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>shaderStages[<sp/>0<sp/>].module<sp/>=<sp/>vertShaderModule;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>shaderStages[<sp/>0<sp/>].pName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;main&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>shaderStages[<sp/>0<sp/>].flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>shaderStages[<sp/>0<sp/>].pNext<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>shaderStages[<sp/>0<sp/>].pSpecializationInfo<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fragment<sp/>shader<sp/>stage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>shaderStages[<sp/>1<sp/>].sType<sp/>=<sp/>VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>shaderStages[<sp/>1<sp/>].stage<sp/>=<sp/>VK_SHADER_STAGE_FRAGMENT_BIT;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>shaderStages[<sp/>1<sp/>].module<sp/>=<sp/>fragShaderModule;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>shaderStages[<sp/>1<sp/>].pName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;main&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>shaderStages[<sp/>1<sp/>].flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>shaderStages[<sp/>1<sp/>].pNext<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>shaderStages[<sp/>1<sp/>].pSpecializationInfo<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>From<sp/>model<sp/>descriptions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>BindingDescriptions<sp/>=<sp/><ref refid="struct_blocky_vulkan_1_1_model_1_1_vertex_1a97a92a1265877fff2f287b07d0ac9db4" kindref="member">Model::Vertex::GetBindingDescriptions</ref>();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>AttributeDescriptions<sp/>=<sp/><ref refid="struct_blocky_vulkan_1_1_model_1_1_vertex_1afb7939bc1d098cd9d72f99a95a14ed72" kindref="member">Model::Vertex::GetAttributeDescriptions</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input<sp/>info<sp/>(Vertex)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>VkPipelineVertexInputStateCreateInfo<sp/>vertexInputInfo{};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>vertexInputInfo.sType<sp/>=</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>vertexInputInfo.vertexAttributeDescriptionCount<sp/>=</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>AttributeDescriptions.size()<sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>vertexInputInfo.vertexBindingDescriptionCount<sp/>=</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>BindingDescriptions.size()<sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>vertexInputInfo.pVertexAttributeDescriptions<sp/>=<sp/>AttributeDescriptions.data();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>vertexInputInfo.pVertexBindingDescriptions<sp/>=<sp/>BindingDescriptions.data();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pipeline<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>VkGraphicsPipelineCreateInfo<sp/>pipelineInfo{};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineInfo.stageCount<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineInfo.pStages<sp/>=<sp/>shaderStages;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineInfo.pVertexInputState<sp/>=<sp/>&amp;vertexInputInfo;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineInfo.pInputAssemblyState<sp/>=<sp/>&amp;configInfo.inputAssemblyInfo;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineInfo.pViewportState<sp/>=<sp/>&amp;configInfo.viewportInfo;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineInfo.pRasterizationState<sp/>=<sp/>&amp;configInfo.rasterizationInfo;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineInfo.pMultisampleState<sp/>=<sp/>&amp;configInfo.multisampleInfo;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineInfo.pColorBlendState<sp/>=<sp/>&amp;configInfo.colorBlendInfo;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineInfo.pDepthStencilState<sp/>=<sp/>&amp;configInfo.depthStencilInfo;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineInfo.pDynamicState<sp/>=<sp/>&amp;configInfo.dynamicStateInfo;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineInfo.layout<sp/>=<sp/>configInfo.pipelineLayout;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineInfo.renderPass<sp/>=<sp/>configInfo.renderPass;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineInfo.subpass<sp/>=<sp/>configInfo.subpass;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineInfo.basePipelineIndex<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>pipelineInfo.basePipelineHandle<sp/>=<sp/>VK_NULL_HANDLE;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>vkCreateGraphicsPipelines(<sp/>Device.<ref refid="class_blocky_vulkan_1_1_device_1abd0f1af74c6907d4354112e1291db9aa" kindref="member">device</ref>(),<sp/>VK_NULL_HANDLE,<sp/>1,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pipelineInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;graphicsPipeline<sp/>)<sp/>!=<sp/>VK_SUCCESS<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>graphics<sp/>pipeline!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Pipeline::CreateShaderModule(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;char&gt;<sp/>&amp;code,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VkShaderModule<sp/>*shaderModule<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>VkShaderModuleCreateInfo<sp/>createInfo{};</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>createInfo.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>createInfo.codeSize<sp/>=<sp/>code.size();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>createInfo.pCode<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint32_t<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>code.data()<sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>vkCreateShaderModule(<sp/>Device.<ref refid="class_blocky_vulkan_1_1_device_1abd0f1af74c6907d4354112e1291db9aa" kindref="member">device</ref>(),<sp/>&amp;createInfo,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shaderModule<sp/>)<sp/>!=<sp/>VK_SUCCESS<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>create<sp/>shader<sp/>module!&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="class_blocky_vulkan_1_1_pipeline_1a790267c38cf3e3a95cde697d4c88be51" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_blocky_vulkan_1_1_pipeline_1a790267c38cf3e3a95cde697d4c88be51" kindref="member">Pipeline::Bind</ref>(<sp/>VkCommandBuffer<sp/>commandBuffer<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>vkCmdBindPipeline(<sp/>commandBuffer,<sp/>VK_PIPELINE_BIND_POINT_GRAPHICS,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graphicsPipeline<sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="class_blocky_vulkan_1_1_pipeline_1a921ac3065459aee5818a300bb87e8eed" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_blocky_vulkan_1_1_pipeline_1a921ac3065459aee5818a300bb87e8eed" kindref="member">Pipeline::DefaultPipelineConfigInfo</ref>(<sp/><ref refid="struct_blocky_vulkan_1_1_pipeline_config_info" kindref="compound">PipelineConfigInfo</ref><sp/>&amp;configInfo<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input<sp/>assembly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1af79d02ca54f050415f818df3ff5140a6" kindref="member">inputAssemblyInfo</ref>.sType<sp/>=</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1af79d02ca54f050415f818df3ff5140a6" kindref="member">inputAssemblyInfo</ref>.topology<sp/>=<sp/>VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1af79d02ca54f050415f818df3ff5140a6" kindref="member">inputAssemblyInfo</ref>.primitiveRestartEnable<sp/>=<sp/>VK_FALSE;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Viewport</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1abf9d4590b94afc9da9222a8b86805a4c" kindref="member">viewportInfo</ref>.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1abf9d4590b94afc9da9222a8b86805a4c" kindref="member">viewportInfo</ref>.viewportCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1abf9d4590b94afc9da9222a8b86805a4c" kindref="member">viewportInfo</ref>.pViewports<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1abf9d4590b94afc9da9222a8b86805a4c" kindref="member">viewportInfo</ref>.scissorCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1abf9d4590b94afc9da9222a8b86805a4c" kindref="member">viewportInfo</ref>.pScissors<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rasterization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1a49e68fcfec16e572277de541a84c0086" kindref="member">rasterizationInfo</ref>.sType<sp/>=</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1a49e68fcfec16e572277de541a84c0086" kindref="member">rasterizationInfo</ref>.depthClampEnable<sp/>=<sp/>VK_FALSE;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1a49e68fcfec16e572277de541a84c0086" kindref="member">rasterizationInfo</ref>.rasterizerDiscardEnable<sp/>=<sp/>VK_FALSE;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1a49e68fcfec16e572277de541a84c0086" kindref="member">rasterizationInfo</ref>.polygonMode<sp/>=<sp/>VK_POLYGON_MODE_FILL;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1a49e68fcfec16e572277de541a84c0086" kindref="member">rasterizationInfo</ref>.lineWidth<sp/>=<sp/>1.f;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1a49e68fcfec16e572277de541a84c0086" kindref="member">rasterizationInfo</ref>.cullMode<sp/>=<sp/>VK_CULL_MODE_NONE;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1a49e68fcfec16e572277de541a84c0086" kindref="member">rasterizationInfo</ref>.frontFace<sp/>=<sp/>VK_FRONT_FACE_CLOCKWISE;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1a49e68fcfec16e572277de541a84c0086" kindref="member">rasterizationInfo</ref>.depthBiasEnable<sp/>=<sp/>VK_FALSE;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1a49e68fcfec16e572277de541a84c0086" kindref="member">rasterizationInfo</ref>.depthBiasConstantFactor<sp/>=<sp/>.0f;<sp/><sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1a49e68fcfec16e572277de541a84c0086" kindref="member">rasterizationInfo</ref>.depthBiasClamp<sp/>=<sp/>.0f;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1a49e68fcfec16e572277de541a84c0086" kindref="member">rasterizationInfo</ref>.depthBiasSlopeFactor<sp/>=<sp/>.0f;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Multisampling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1af2749bee4dc10bb630639892e5839c70" kindref="member">multisampleInfo</ref>.sType<sp/>=</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1af2749bee4dc10bb630639892e5839c70" kindref="member">multisampleInfo</ref>.sampleShadingEnable<sp/>=<sp/>VK_FALSE;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1af2749bee4dc10bb630639892e5839c70" kindref="member">multisampleInfo</ref>.rasterizationSamples<sp/>=<sp/>VK_SAMPLE_COUNT_1_BIT;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1af2749bee4dc10bb630639892e5839c70" kindref="member">multisampleInfo</ref>.minSampleShading<sp/>=<sp/>1.f;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1af2749bee4dc10bb630639892e5839c70" kindref="member">multisampleInfo</ref>.pSampleMask<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1af2749bee4dc10bb630639892e5839c70" kindref="member">multisampleInfo</ref>.alphaToCoverageEnable<sp/>=<sp/>VK_FALSE;<sp/><sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1af2749bee4dc10bb630639892e5839c70" kindref="member">multisampleInfo</ref>.alphaToOneEnable<sp/>=<sp/>VK_FALSE;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Color<sp/>blending</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1ace48c96bcff001251bd0ab9a6c28ee06" kindref="member">colorBlendAttachment</ref>.colorWriteMask<sp/>=</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VK_COLOR_COMPONENT_R_BIT<sp/>|<sp/>VK_COLOR_COMPONENT_G_BIT<sp/>|</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VK_COLOR_COMPONENT_B_BIT<sp/>|<sp/>VK_COLOR_COMPONENT_A_BIT;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1ace48c96bcff001251bd0ab9a6c28ee06" kindref="member">colorBlendAttachment</ref>.blendEnable<sp/>=<sp/>VK_FALSE;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1ace48c96bcff001251bd0ab9a6c28ee06" kindref="member">colorBlendAttachment</ref>.srcColorBlendFactor<sp/>=</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VK_BLEND_FACTOR_ONE;<sp/><sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1ace48c96bcff001251bd0ab9a6c28ee06" kindref="member">colorBlendAttachment</ref>.dstColorBlendFactor<sp/>=</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VK_BLEND_FACTOR_ZERO;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1ace48c96bcff001251bd0ab9a6c28ee06" kindref="member">colorBlendAttachment</ref>.colorBlendOp<sp/>=<sp/>VK_BLEND_OP_ADD;<sp/><sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1ace48c96bcff001251bd0ab9a6c28ee06" kindref="member">colorBlendAttachment</ref>.srcAlphaBlendFactor<sp/>=</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VK_BLEND_FACTOR_ONE;<sp/><sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1ace48c96bcff001251bd0ab9a6c28ee06" kindref="member">colorBlendAttachment</ref>.dstAlphaBlendFactor<sp/>=</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VK_BLEND_FACTOR_ZERO;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1ace48c96bcff001251bd0ab9a6c28ee06" kindref="member">colorBlendAttachment</ref>.alphaBlendOp<sp/>=<sp/>VK_BLEND_OP_ADD;<sp/><sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1a2dcfd03ff283e7ef7ba256c2cd2a7010" kindref="member">colorBlendInfo</ref>.sType<sp/>=</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1a2dcfd03ff283e7ef7ba256c2cd2a7010" kindref="member">colorBlendInfo</ref>.logicOpEnable<sp/>=<sp/>VK_FALSE;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1a2dcfd03ff283e7ef7ba256c2cd2a7010" kindref="member">colorBlendInfo</ref>.logicOp<sp/>=<sp/>VK_LOGIC_OP_COPY;<sp/><sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1a2dcfd03ff283e7ef7ba256c2cd2a7010" kindref="member">colorBlendInfo</ref>.attachmentCount<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1a2dcfd03ff283e7ef7ba256c2cd2a7010" kindref="member">colorBlendInfo</ref>.pAttachments<sp/>=<sp/>&amp;configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1ace48c96bcff001251bd0ab9a6c28ee06" kindref="member">colorBlendAttachment</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1a2dcfd03ff283e7ef7ba256c2cd2a7010" kindref="member">colorBlendInfo</ref>.blendConstants[<sp/>0<sp/>]<sp/>=<sp/>.0f;<sp/><sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1a2dcfd03ff283e7ef7ba256c2cd2a7010" kindref="member">colorBlendInfo</ref>.blendConstants[<sp/>1<sp/>]<sp/>=<sp/>.0f;<sp/><sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1a2dcfd03ff283e7ef7ba256c2cd2a7010" kindref="member">colorBlendInfo</ref>.blendConstants[<sp/>2<sp/>]<sp/>=<sp/>.0f;<sp/><sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1a2dcfd03ff283e7ef7ba256c2cd2a7010" kindref="member">colorBlendInfo</ref>.blendConstants[<sp/>3<sp/>]<sp/>=<sp/>.0f;<sp/><sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Depth<sp/>testing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1ae5ebd9012649adcbe2fdb35b896a3e87" kindref="member">depthStencilInfo</ref>.sType<sp/>=</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1ae5ebd9012649adcbe2fdb35b896a3e87" kindref="member">depthStencilInfo</ref>.depthTestEnable<sp/>=<sp/>VK_TRUE;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1ae5ebd9012649adcbe2fdb35b896a3e87" kindref="member">depthStencilInfo</ref>.depthWriteEnable<sp/>=<sp/>VK_TRUE;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1ae5ebd9012649adcbe2fdb35b896a3e87" kindref="member">depthStencilInfo</ref>.depthCompareOp<sp/>=<sp/>VK_COMPARE_OP_LESS;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1ae5ebd9012649adcbe2fdb35b896a3e87" kindref="member">depthStencilInfo</ref>.depthBoundsTestEnable<sp/>=<sp/>VK_FALSE;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1ae5ebd9012649adcbe2fdb35b896a3e87" kindref="member">depthStencilInfo</ref>.minDepthBounds<sp/>=<sp/>.0f;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1ae5ebd9012649adcbe2fdb35b896a3e87" kindref="member">depthStencilInfo</ref>.maxDepthBounds<sp/>=<sp/>1.f;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1ae5ebd9012649adcbe2fdb35b896a3e87" kindref="member">depthStencilInfo</ref>.stencilTestEnable<sp/>=<sp/>VK_FALSE;<sp/><sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1ae5ebd9012649adcbe2fdb35b896a3e87" kindref="member">depthStencilInfo</ref>.front<sp/>=<sp/>{};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1ae5ebd9012649adcbe2fdb35b896a3e87" kindref="member">depthStencilInfo</ref>.back<sp/>=<sp/>{};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Optional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dynamic<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1ac754f6d94c8df9b55641efabec67c5f6" kindref="member">dynamicStateEnables</ref><sp/>=<sp/>{<sp/>VK_DYNAMIC_STATE_VIEWPORT,<sp/>VK_DYNAMIC_STATE_SCISSOR<sp/>};</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1a698beed88b6819a26b0e4650ed8d0210" kindref="member">dynamicStateInfo</ref>.sType<sp/>=<sp/>VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1a698beed88b6819a26b0e4650ed8d0210" kindref="member">dynamicStateInfo</ref>.pDynamicStates<sp/>=<sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1ac754f6d94c8df9b55641efabec67c5f6" kindref="member">dynamicStateEnables</ref>.data();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1a698beed88b6819a26b0e4650ed8d0210" kindref="member">dynamicStateInfo</ref>.dynamicStateCount<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1ac754f6d94c8df9b55641efabec67c5f6" kindref="member">dynamicStateEnables</ref>.size()<sp/>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>configInfo.<ref refid="struct_blocky_vulkan_1_1_pipeline_config_info_1a698beed88b6819a26b0e4650ed8d0210" kindref="member">dynamicStateInfo</ref>.flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="X:/Pro/GameDev/VulkanBlock/src/pipeline/pipeline.cpp"/>
  </compounddef>
</doxygen>
