.TH "BlockyVulkan::SwapChain" 3 "Sun Dec 8 2024 18:35:01" "Version 0.1" "VulkanBlock" \" -*- nroff -*-
.ad l
.nh
.SH NAME
BlockyVulkan::SwapChain
.SH SYNOPSIS
.br
.PP
.PP
\fR#include <swap_chain\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSwapChain\fP (\fBDevice\fP &deviceRef, VkExtent2D windowExtent)"
.br
.ti -1c
.RI "\fBSwapChain\fP (\fBDevice\fP &deviceRef, VkExtent2D windowExtent, std::shared_ptr< \fBSwapChain\fP > previous)"
.br
.ti -1c
.RI "\fB~SwapChain\fP ()"
.br
.ti -1c
.RI "\fBSwapChain\fP (const \fBSwapChain\fP &)=delete"
.br
.ti -1c
.RI "\fBSwapChain\fP & \fBoperator=\fP (const \fBSwapChain\fP &)=delete"
.br
.ti -1c
.RI "VkFramebuffer \fBgetFrameBuffer\fP (int index)"
.br
.ti -1c
.RI "VkRenderPass \fBgetRenderPass\fP ()"
.br
.ti -1c
.RI "VkImageView \fBgetImageView\fP (int index)"
.br
.ti -1c
.RI "size_t \fBimageCount\fP ()"
.br
.ti -1c
.RI "VkFormat \fBgetSwapChainImageFormat\fP ()"
.br
.ti -1c
.RI "VkExtent2D \fBgetSwapChainExtent\fP ()"
.br
.ti -1c
.RI "uint32_t \fBwidth\fP ()"
.br
.ti -1c
.RI "uint32_t \fBheight\fP ()"
.br
.ti -1c
.RI "float \fBextentAspectRatio\fP ()"
.br
.ti -1c
.RI "VkFormat \fBfindDepthFormat\fP ()"
.br
.ti -1c
.RI "VkResult \fBacquireNextImage\fP (uint32_t *imageIndex)"
.br
.ti -1c
.RI "VkResult \fBsubmitCommandBuffers\fP (const VkCommandBuffer *buffers, uint32_t *imageIndex)"
.br
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static constexpr int \fBMAX_FRAMES_IN_FLIGHT\fP = 2"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "BlockyVulkan::SwapChain::SwapChain (\fBDevice\fP & deviceRef, VkExtent2D windowExtent)"

.SS "BlockyVulkan::SwapChain::SwapChain (\fBDevice\fP & deviceRef, VkExtent2D windowExtent, std::shared_ptr< \fBSwapChain\fP > previous)"

.SS "BlockyVulkan::SwapChain::~SwapChain ()"

.SS "BlockyVulkan::SwapChain::SwapChain (const \fBSwapChain\fP & )\fR [delete]\fP"

.SH "Member Function Documentation"
.PP 
.SS "VkResult BlockyVulkan::SwapChain::acquireNextImage (uint32_t * imageIndex)"

.SS "float BlockyVulkan::SwapChain::extentAspectRatio ()\fR [inline]\fP"

.SS "VkFormat BlockyVulkan::SwapChain::findDepthFormat ()"

.SS "VkFramebuffer BlockyVulkan::SwapChain::getFrameBuffer (int index)\fR [inline]\fP"

.SS "VkImageView BlockyVulkan::SwapChain::getImageView (int index)\fR [inline]\fP"

.SS "VkRenderPass BlockyVulkan::SwapChain::getRenderPass ()\fR [inline]\fP"

.SS "VkExtent2D BlockyVulkan::SwapChain::getSwapChainExtent ()\fR [inline]\fP"

.SS "VkFormat BlockyVulkan::SwapChain::getSwapChainImageFormat ()\fR [inline]\fP"

.SS "uint32_t BlockyVulkan::SwapChain::height ()\fR [inline]\fP"

.SS "size_t BlockyVulkan::SwapChain::imageCount ()\fR [inline]\fP"

.SS "\fBSwapChain\fP & BlockyVulkan::SwapChain::operator= (const \fBSwapChain\fP & )\fR [delete]\fP"

.SS "VkResult BlockyVulkan::SwapChain::submitCommandBuffers (const VkCommandBuffer * buffers, uint32_t * imageIndex)"

.SS "uint32_t BlockyVulkan::SwapChain::width ()\fR [inline]\fP"

.SH "Member Data Documentation"
.PP 
.SS "int BlockyVulkan::SwapChain::MAX_FRAMES_IN_FLIGHT = 2\fR [static]\fP, \fR [constexpr]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for VulkanBlock from the source code\&.
