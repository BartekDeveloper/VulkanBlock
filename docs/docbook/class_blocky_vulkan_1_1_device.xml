<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_blocky_vulkan_1_1_device" xml:lang="en-US">
<title>BlockyVulkan::Device Class Reference</title>
<indexterm><primary>BlockyVulkan::Device</primary></indexterm>
<para>
<computeroutput>#include &lt;device.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_blocky_vulkan_1_1_device_1a855af26281a51ebe1946e66fb1ed181a">Device</link> (<link linkend="_class_blocky_vulkan_1_1_window">Window</link> &amp;window)</para>
</listitem>
            <listitem><para><link linkend="_class_blocky_vulkan_1_1_device_1af4d1bbf15ca45ebc0df540f447701c35">~Device</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_blocky_vulkan_1_1_device_1a50713128568f269bcdbf595e0852dd67">Device</link> (const <link linkend="_class_blocky_vulkan_1_1_device">Device</link> &amp;)=delete</para>
</listitem>
            <listitem><para>void <link linkend="_class_blocky_vulkan_1_1_device_1a6151eb20159fc8cf528a40f788634d5d">operator=</link> (const <link linkend="_class_blocky_vulkan_1_1_device">Device</link> &amp;)=delete</para>
</listitem>
            <listitem><para><link linkend="_class_blocky_vulkan_1_1_device_1a7e807401ded0492da7a9242bebceaf72">Device</link> (<link linkend="_class_blocky_vulkan_1_1_device">Device</link> &amp;&amp;)=delete</para>
</listitem>
            <listitem><para><link linkend="_class_blocky_vulkan_1_1_device">Device</link> &amp; <link linkend="_class_blocky_vulkan_1_1_device_1a190e484949079a7bc1b89e233eb24836">operator=</link> (<link linkend="_class_blocky_vulkan_1_1_device">Device</link> &amp;&amp;)=delete</para>
</listitem>
            <listitem><para>VkCommandPool <link linkend="_class_blocky_vulkan_1_1_device_1a406e7e7a3c33c969cfe9b1d8165270f5">getCommandPool</link> ()</para>
</listitem>
            <listitem><para>VkDevice <link linkend="_class_blocky_vulkan_1_1_device_1abd0f1af74c6907d4354112e1291db9aa">device</link> ()</para>
</listitem>
            <listitem><para>VkSurfaceKHR <link linkend="_class_blocky_vulkan_1_1_device_1a5f068bfa59fef43e83ea22f64390f3cd">surface</link> ()</para>
</listitem>
            <listitem><para>VkQueue <link linkend="_class_blocky_vulkan_1_1_device_1a4a40e0cccdd4c1b3dd840fe8e2a1b9c9">graphicsQueue</link> ()</para>
</listitem>
            <listitem><para>VkQueue <link linkend="_class_blocky_vulkan_1_1_device_1a522545cf12e6a3e11522c60d751d6833">presentQueue</link> ()</para>
</listitem>
            <listitem><para><link linkend="_struct_blocky_vulkan_1_1_swap_chain_support_details">SwapChainSupportDetails</link> <link linkend="_class_blocky_vulkan_1_1_device_1a3157d2aea16af098ce0cd890188d5b38">getSwapChainSupport</link> ()</para>
</listitem>
            <listitem><para>uint32_t <link linkend="_class_blocky_vulkan_1_1_device_1ad617fcdea6a8baf996e01daf07e2ea81">findMemoryType</link> (uint32_t typeFilter, VkMemoryPropertyFlags <link linkend="_class_blocky_vulkan_1_1_device_1aa21b177cd0be90aec7ecb0179fd7e734">properties</link>)</para>
</listitem>
            <listitem><para><link linkend="_struct_blocky_vulkan_1_1_queue_family_indices">QueueFamilyIndices</link> <link linkend="_class_blocky_vulkan_1_1_device_1ad3ddfd3647179abd6d940be294e790c8">findPhysicalQueueFamilies</link> ()</para>
</listitem>
            <listitem><para>VkFormat <link linkend="_class_blocky_vulkan_1_1_device_1a4d650743baa310cfab8703488586d27c">findSupportedFormat</link> (const std::vector&lt; VkFormat &gt; &amp;candidates, VkImageTiling tiling, VkFormatFeatureFlags features)</para>
</listitem>
            <listitem><para>void <link linkend="_class_blocky_vulkan_1_1_device_1a4de673bdd57fa7f666ed13785178ef64">createBuffer</link> (VkDeviceSize size, VkBufferUsageFlags usage, VkMemoryPropertyFlags <link linkend="_class_blocky_vulkan_1_1_device_1aa21b177cd0be90aec7ecb0179fd7e734">properties</link>, VkBuffer &amp;buffer, VkDeviceMemory &amp;bufferMemory)</para>
</listitem>
            <listitem><para>VkCommandBuffer <link linkend="_class_blocky_vulkan_1_1_device_1a8baa78622c491d96d97538c45e838853">beginSingleTimeCommands</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_blocky_vulkan_1_1_device_1a31bf87be17d10e28137b9245afbe2db5">endSingleTimeCommands</link> (VkCommandBuffer commandBuffer)</para>
</listitem>
            <listitem><para>void <link linkend="_class_blocky_vulkan_1_1_device_1a82e77bebd10b053b0e6aebf5eda4ccd5">copyBuffer</link> (VkBuffer srcBuffer, VkBuffer dstBuffer, VkDeviceSize size)</para>
</listitem>
            <listitem><para>void <link linkend="_class_blocky_vulkan_1_1_device_1ae1628156841c3c8d2ff49b85cec4efc6">copyBufferToImage</link> (VkBuffer buffer, VkImage image, uint32_t width, uint32_t height, uint32_t layerCount)</para>
</listitem>
            <listitem><para>void <link linkend="_class_blocky_vulkan_1_1_device_1aacb612b684d04f19342f6537d207fb15">createImageWithInfo</link> (const VkImageCreateInfo &amp;imageInfo, VkMemoryPropertyFlags <link linkend="_class_blocky_vulkan_1_1_device_1aa21b177cd0be90aec7ecb0179fd7e734">properties</link>, VkImage &amp;image, VkDeviceMemory &amp;imageMemory)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>const bool <link linkend="_class_blocky_vulkan_1_1_device_1a6cb8cbe6257df6c3a3a5a1bfbd67d1e6">enableValidationLayers</link> = true</para>
</listitem>
            <listitem><para>VkPhysicalDeviceProperties <link linkend="_class_blocky_vulkan_1_1_device_1aa21b177cd0be90aec7ecb0179fd7e734">properties</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="_device_8hpp_source_1l00029">29</link> of file <link linkend="_device_8hpp_source">device.hpp</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_blocky_vulkan_1_1_device_1a855af26281a51ebe1946e66fb1ed181a"/><section>
    <title>Device()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>Device</primary><secondary>BlockyVulkan::Device</secondary></indexterm>
<indexterm><primary>BlockyVulkan::Device</primary><secondary>Device</secondary></indexterm>
<para><computeroutput>BlockyVulkan::Device::Device (<link linkend="_class_blocky_vulkan_1_1_window">Window</link> &amp; window)</computeroutput></para><para>
Definition at line <link linkend="_device_8cpp_source_1l00050">50</link> of file <link linkend="_device_8cpp_source">device.cpp</link>.</para>
</section>
<anchor xml:id="_class_blocky_vulkan_1_1_device_1af4d1bbf15ca45ebc0df540f447701c35"/><section>
    <title>~Device()</title>
<indexterm><primary>~Device</primary><secondary>BlockyVulkan::Device</secondary></indexterm>
<indexterm><primary>BlockyVulkan::Device</primary><secondary>~Device</secondary></indexterm>
<para><computeroutput>BlockyVulkan::Device::~Device ( )</computeroutput></para><para>
Definition at line <link linkend="_device_8cpp_source_1l00059">59</link> of file <link linkend="_device_8cpp_source">device.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_blocky_vulkan_1_1_device_af4d1bbf15ca45ebc0df540f447701c35_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_blocky_vulkan_1_1_device_1a50713128568f269bcdbf595e0852dd67"/><section>
    <title>Device()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>Device</primary><secondary>BlockyVulkan::Device</secondary></indexterm>
<indexterm><primary>BlockyVulkan::Device</primary><secondary>Device</secondary></indexterm>
<para><computeroutput>BlockyVulkan::Device::Device (const <link linkend="_class_blocky_vulkan_1_1_device">Device</link> &amp; )<computeroutput>[delete]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_blocky_vulkan_1_1_device_1a7e807401ded0492da7a9242bebceaf72"/><section>
    <title>Device()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>Device</primary><secondary>BlockyVulkan::Device</secondary></indexterm>
<indexterm><primary>BlockyVulkan::Device</primary><secondary>Device</secondary></indexterm>
<para><computeroutput>BlockyVulkan::Device::Device (<link linkend="_class_blocky_vulkan_1_1_device">Device</link> &amp;&amp; )<computeroutput>[delete]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_blocky_vulkan_1_1_device_1a8baa78622c491d96d97538c45e838853"/><section>
    <title>beginSingleTimeCommands()</title>
<indexterm><primary>beginSingleTimeCommands</primary><secondary>BlockyVulkan::Device</secondary></indexterm>
<indexterm><primary>BlockyVulkan::Device</primary><secondary>beginSingleTimeCommands</secondary></indexterm>
<para><computeroutput>VkCommandBuffer BlockyVulkan::Device::beginSingleTimeCommands ( )</computeroutput></para><para>
Definition at line <link linkend="_device_8cpp_source_1l00439">439</link> of file <link linkend="_device_8cpp_source">device.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_blocky_vulkan_1_1_device_a8baa78622c491d96d97538c45e838853_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_blocky_vulkan_1_1_device_1a82e77bebd10b053b0e6aebf5eda4ccd5"/><section>
    <title>copyBuffer()</title>
<indexterm><primary>copyBuffer</primary><secondary>BlockyVulkan::Device</secondary></indexterm>
<indexterm><primary>BlockyVulkan::Device</primary><secondary>copyBuffer</secondary></indexterm>
<para><computeroutput>void BlockyVulkan::Device::copyBuffer (VkBuffer srcBuffer, VkBuffer dstBuffer, VkDeviceSize size)</computeroutput></para><para>
Definition at line <link linkend="_device_8cpp_source_1l00471">471</link> of file <link linkend="_device_8cpp_source">device.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_blocky_vulkan_1_1_device_a82e77bebd10b053b0e6aebf5eda4ccd5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_blocky_vulkan_1_1_device_1ae1628156841c3c8d2ff49b85cec4efc6"/><section>
    <title>copyBufferToImage()</title>
<indexterm><primary>copyBufferToImage</primary><secondary>BlockyVulkan::Device</secondary></indexterm>
<indexterm><primary>BlockyVulkan::Device</primary><secondary>copyBufferToImage</secondary></indexterm>
<para><computeroutput>void BlockyVulkan::Device::copyBufferToImage (VkBuffer buffer, VkImage image, uint32_t width, uint32_t height, uint32_t layerCount)</computeroutput></para><para>
Definition at line <link linkend="_device_8cpp_source_1l00483">483</link> of file <link linkend="_device_8cpp_source">device.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_blocky_vulkan_1_1_device_ae1628156841c3c8d2ff49b85cec4efc6_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_blocky_vulkan_1_1_device_1a4de673bdd57fa7f666ed13785178ef64"/><section>
    <title>createBuffer()</title>
<indexterm><primary>createBuffer</primary><secondary>BlockyVulkan::Device</secondary></indexterm>
<indexterm><primary>BlockyVulkan::Device</primary><secondary>createBuffer</secondary></indexterm>
<para><computeroutput>void BlockyVulkan::Device::createBuffer (VkDeviceSize size, VkBufferUsageFlags usage, VkMemoryPropertyFlags properties, VkBuffer &amp; buffer, VkDeviceMemory &amp; bufferMemory)</computeroutput></para><para>
Definition at line <link linkend="_device_8cpp_source_1l00408">408</link> of file <link linkend="_device_8cpp_source">device.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_blocky_vulkan_1_1_device_a4de673bdd57fa7f666ed13785178ef64_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_blocky_vulkan_1_1_device_1aacb612b684d04f19342f6537d207fb15"/><section>
    <title>createImageWithInfo()</title>
<indexterm><primary>createImageWithInfo</primary><secondary>BlockyVulkan::Device</secondary></indexterm>
<indexterm><primary>BlockyVulkan::Device</primary><secondary>createImageWithInfo</secondary></indexterm>
<para><computeroutput>void BlockyVulkan::Device::createImageWithInfo (const VkImageCreateInfo &amp; imageInfo, VkMemoryPropertyFlags properties, VkImage &amp; image, VkDeviceMemory &amp; imageMemory)</computeroutput></para><para>
Definition at line <link linkend="_device_8cpp_source_1l00510">510</link> of file <link linkend="_device_8cpp_source">device.cpp</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_blocky_vulkan_1_1_device_aacb612b684d04f19342f6537d207fb15_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_blocky_vulkan_1_1_device_1abd0f1af74c6907d4354112e1291db9aa"/><section>
    <title>device()</title>
<indexterm><primary>device</primary><secondary>BlockyVulkan::Device</secondary></indexterm>
<indexterm><primary>BlockyVulkan::Device</primary><secondary>device</secondary></indexterm>
<para><computeroutput>VkDevice BlockyVulkan::Device::device ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_device_8hpp_source_1l00049">49</link> of file <link linkend="_device_8hpp_source">device.hpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_blocky_vulkan_1_1_device_abd0f1af74c6907d4354112e1291db9aa_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_blocky_vulkan_1_1_device_1a31bf87be17d10e28137b9245afbe2db5"/><section>
    <title>endSingleTimeCommands()</title>
<indexterm><primary>endSingleTimeCommands</primary><secondary>BlockyVulkan::Device</secondary></indexterm>
<indexterm><primary>BlockyVulkan::Device</primary><secondary>endSingleTimeCommands</secondary></indexterm>
<para><computeroutput>void BlockyVulkan::Device::endSingleTimeCommands (VkCommandBuffer commandBuffer)</computeroutput></para><para>
Definition at line <link linkend="_device_8cpp_source_1l00457">457</link> of file <link linkend="_device_8cpp_source">device.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_blocky_vulkan_1_1_device_a31bf87be17d10e28137b9245afbe2db5_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_blocky_vulkan_1_1_device_1ad617fcdea6a8baf996e01daf07e2ea81"/><section>
    <title>findMemoryType()</title>
<indexterm><primary>findMemoryType</primary><secondary>BlockyVulkan::Device</secondary></indexterm>
<indexterm><primary>BlockyVulkan::Device</primary><secondary>findMemoryType</secondary></indexterm>
<para><computeroutput>uint32_t BlockyVulkan::Device::findMemoryType (uint32_t typeFilter, VkMemoryPropertyFlags properties)</computeroutput></para><para>
Definition at line <link linkend="_device_8cpp_source_1l00395">395</link> of file <link linkend="_device_8cpp_source">device.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_blocky_vulkan_1_1_device_ad617fcdea6a8baf996e01daf07e2ea81_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_blocky_vulkan_1_1_device_1ad3ddfd3647179abd6d940be294e790c8"/><section>
    <title>findPhysicalQueueFamilies()</title>
<indexterm><primary>findPhysicalQueueFamilies</primary><secondary>BlockyVulkan::Device</secondary></indexterm>
<indexterm><primary>BlockyVulkan::Device</primary><secondary>findPhysicalQueueFamilies</secondary></indexterm>
<para><computeroutput><link linkend="_struct_blocky_vulkan_1_1_queue_family_indices">QueueFamilyIndices</link> BlockyVulkan::Device::findPhysicalQueueFamilies ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_device_8hpp_source_1l00066">66</link> of file <link linkend="_device_8hpp_source">device.hpp</link>.</para>
</section>
<anchor xml:id="_class_blocky_vulkan_1_1_device_1a4d650743baa310cfab8703488586d27c"/><section>
    <title>findSupportedFormat()</title>
<indexterm><primary>findSupportedFormat</primary><secondary>BlockyVulkan::Device</secondary></indexterm>
<indexterm><primary>BlockyVulkan::Device</primary><secondary>findSupportedFormat</secondary></indexterm>
<para><computeroutput>VkFormat BlockyVulkan::Device::findSupportedFormat (const std::vector&lt; VkFormat &gt; &amp; candidates, VkImageTiling tiling, VkFormatFeatureFlags features)</computeroutput></para><para>
Definition at line <link linkend="_device_8cpp_source_1l00379">379</link> of file <link linkend="_device_8cpp_source">device.cpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_blocky_vulkan_1_1_device_a4d650743baa310cfab8703488586d27c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_blocky_vulkan_1_1_device_1a406e7e7a3c33c969cfe9b1d8165270f5"/><section>
    <title>getCommandPool()</title>
<indexterm><primary>getCommandPool</primary><secondary>BlockyVulkan::Device</secondary></indexterm>
<indexterm><primary>BlockyVulkan::Device</primary><secondary>getCommandPool</secondary></indexterm>
<para><computeroutput>VkCommandPool BlockyVulkan::Device::getCommandPool ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_device_8hpp_source_1l00046">46</link> of file <link linkend="_device_8hpp_source">device.hpp</link>.</para>
</section>
<anchor xml:id="_class_blocky_vulkan_1_1_device_1a3157d2aea16af098ce0cd890188d5b38"/><section>
    <title>getSwapChainSupport()</title>
<indexterm><primary>getSwapChainSupport</primary><secondary>BlockyVulkan::Device</secondary></indexterm>
<indexterm><primary>BlockyVulkan::Device</primary><secondary>getSwapChainSupport</secondary></indexterm>
<para><computeroutput><link linkend="_struct_blocky_vulkan_1_1_swap_chain_support_details">SwapChainSupportDetails</link> BlockyVulkan::Device::getSwapChainSupport ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_device_8hpp_source_1l00062">62</link> of file <link linkend="_device_8hpp_source">device.hpp</link>.</para>
</section>
<anchor xml:id="_class_blocky_vulkan_1_1_device_1a4a40e0cccdd4c1b3dd840fe8e2a1b9c9"/><section>
    <title>graphicsQueue()</title>
<indexterm><primary>graphicsQueue</primary><secondary>BlockyVulkan::Device</secondary></indexterm>
<indexterm><primary>BlockyVulkan::Device</primary><secondary>graphicsQueue</secondary></indexterm>
<para><computeroutput>VkQueue BlockyVulkan::Device::graphicsQueue ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_device_8hpp_source_1l00055">55</link> of file <link linkend="_device_8hpp_source">device.hpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_blocky_vulkan_1_1_device_a4a40e0cccdd4c1b3dd840fe8e2a1b9c9_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_blocky_vulkan_1_1_device_1a6151eb20159fc8cf528a40f788634d5d"/><section>
    <title>operator=()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>BlockyVulkan::Device</secondary></indexterm>
<indexterm><primary>BlockyVulkan::Device</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput>void BlockyVulkan::Device::operator= (const <link linkend="_class_blocky_vulkan_1_1_device">Device</link> &amp; )<computeroutput>[delete]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_blocky_vulkan_1_1_device_1a190e484949079a7bc1b89e233eb24836"/><section>
    <title>operator=()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>BlockyVulkan::Device</secondary></indexterm>
<indexterm><primary>BlockyVulkan::Device</primary><secondary>operator=</secondary></indexterm>
<para><computeroutput><link linkend="_class_blocky_vulkan_1_1_device">Device</link> &amp; BlockyVulkan::Device::operator= (<link linkend="_class_blocky_vulkan_1_1_device">Device</link> &amp;&amp; )<computeroutput>[delete]</computeroutput></computeroutput></para></section>
<anchor xml:id="_class_blocky_vulkan_1_1_device_1a522545cf12e6a3e11522c60d751d6833"/><section>
    <title>presentQueue()</title>
<indexterm><primary>presentQueue</primary><secondary>BlockyVulkan::Device</secondary></indexterm>
<indexterm><primary>BlockyVulkan::Device</primary><secondary>presentQueue</secondary></indexterm>
<para><computeroutput>VkQueue BlockyVulkan::Device::presentQueue ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_device_8hpp_source_1l00058">58</link> of file <link linkend="_device_8hpp_source">device.hpp</link>.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_blocky_vulkan_1_1_device_a522545cf12e6a3e11522c60d751d6833_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_blocky_vulkan_1_1_device_1a5f068bfa59fef43e83ea22f64390f3cd"/><section>
    <title>surface()</title>
<indexterm><primary>surface</primary><secondary>BlockyVulkan::Device</secondary></indexterm>
<indexterm><primary>BlockyVulkan::Device</primary><secondary>surface</secondary></indexterm>
<para><computeroutput>VkSurfaceKHR BlockyVulkan::Device::surface ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_device_8hpp_source_1l00052">52</link> of file <link linkend="_device_8hpp_source">device.hpp</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_blocky_vulkan_1_1_device_1a6cb8cbe6257df6c3a3a5a1bfbd67d1e6"/><section>
    <title>enableValidationLayers</title>
<indexterm><primary>enableValidationLayers</primary><secondary>BlockyVulkan::Device</secondary></indexterm>
<indexterm><primary>BlockyVulkan::Device</primary><secondary>enableValidationLayers</secondary></indexterm>
<para><computeroutput>const bool BlockyVulkan::Device::enableValidationLayers = true</computeroutput></para><para>
Definition at line <link linkend="_device_8hpp_source_1l00034">34</link> of file <link linkend="_device_8hpp_source">device.hpp</link>.</para>
</section>
<anchor xml:id="_class_blocky_vulkan_1_1_device_1aa21b177cd0be90aec7ecb0179fd7e734"/><section>
    <title>properties</title>
<indexterm><primary>properties</primary><secondary>BlockyVulkan::Device</secondary></indexterm>
<indexterm><primary>BlockyVulkan::Device</primary><secondary>properties</secondary></indexterm>
<para><computeroutput>VkPhysicalDeviceProperties BlockyVulkan::Device::properties</computeroutput></para><para>
Definition at line <link linkend="_device_8hpp_source_1l00091">91</link> of file <link linkend="_device_8hpp_source">device.hpp</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
src/device/<link linkend="_device_8hpp">device.hpp</link>src/device/<link linkend="_device_8cpp">device.cpp</link></section>
</section>
