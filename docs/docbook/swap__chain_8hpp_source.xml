<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_swap__chain_8hpp_source" xml:lang="en-US">
<title>swap_chain.hpp</title>
<indexterm><primary>src/swapchain/swap_chain.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_swap__chain_8hpp_source_1l00001"/>00001 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
<anchor xml:id="_swap__chain_8hpp_source_1l00002"/>00002 
<anchor xml:id="_swap__chain_8hpp_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_device_8hpp">../device/device.hpp</link>&quot;</emphasis>
<anchor xml:id="_swap__chain_8hpp_source_1l00004"/>00004 
<anchor xml:id="_swap__chain_8hpp_source_1l00005"/>00005 <emphasis role="comment">//&#32;vulkan&#32;headers</emphasis>
<anchor xml:id="_swap__chain_8hpp_source_1l00006"/>00006 <emphasis role="preprocessor">#include&#32;&lt;vulkan/vulkan.h&gt;</emphasis>
<anchor xml:id="_swap__chain_8hpp_source_1l00007"/>00007 
<anchor xml:id="_swap__chain_8hpp_source_1l00008"/>00008 <emphasis role="comment">//&#32;std&#32;lib&#32;headers</emphasis>
<anchor xml:id="_swap__chain_8hpp_source_1l00009"/>00009 <emphasis role="preprocessor">#include&#32;&lt;memory&gt;</emphasis>
<anchor xml:id="_swap__chain_8hpp_source_1l00010"/>00010 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
<anchor xml:id="_swap__chain_8hpp_source_1l00011"/>00011 <emphasis role="preprocessor">#include&#32;&lt;vector&gt;</emphasis>
<anchor xml:id="_swap__chain_8hpp_source_1l00012"/>00012 
<anchor xml:id="_swap__chain_8hpp_source_1l00013"/>00013 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_blocky_vulkan">BlockyVulkan</link>&#32;{
<anchor xml:id="_swap__chain_8hpp_source_1l00014"/>00014 
<anchor xml:id="_swap__chain_8hpp_source_1l00015"/><link linkend="_class_blocky_vulkan_1_1_swap_chain">00015</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_blocky_vulkan_1_1_swap_chain">SwapChain</link>&#32;{
<anchor xml:id="_swap__chain_8hpp_source_1l00016"/>00016 &#32;&#32;<emphasis role="keyword">public</emphasis>:
<anchor xml:id="_swap__chain_8hpp_source_1l00017"/><link linkend="_class_blocky_vulkan_1_1_swap_chain_1a82288aecf69bcdcc0e2c0d6e525709f9">00017</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_class_blocky_vulkan_1_1_swap_chain_1a82288aecf69bcdcc0e2c0d6e525709f9">MAX_FRAMES_IN_FLIGHT</link>&#32;=&#32;2;
<anchor xml:id="_swap__chain_8hpp_source_1l00018"/>00018 
<anchor xml:id="_swap__chain_8hpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<link linkend="_class_blocky_vulkan_1_1_swap_chain_1a28ffd9fc853641200b7d22a82d4b6678">SwapChain</link>(<link linkend="_class_blocky_vulkan_1_1_device">Device</link>&#32;&amp;deviceRef,&#32;VkExtent2D&#32;windowExtent);
<anchor xml:id="_swap__chain_8hpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;<link linkend="_class_blocky_vulkan_1_1_swap_chain_1a28ffd9fc853641200b7d22a82d4b6678">SwapChain</link>(<link linkend="_class_blocky_vulkan_1_1_device">Device</link>&#32;&amp;deviceRef,&#32;VkExtent2D&#32;windowExtent,
<anchor xml:id="_swap__chain_8hpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::shared_ptr&lt;SwapChain&gt;&#32;previous);
<anchor xml:id="_swap__chain_8hpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;<link linkend="_class_blocky_vulkan_1_1_swap_chain_1a15d6d8b52a7997bdd27be2d22a35c9a5">~SwapChain</link>();
<anchor xml:id="_swap__chain_8hpp_source_1l00023"/>00023 
<anchor xml:id="_swap__chain_8hpp_source_1l00024"/><link linkend="_class_blocky_vulkan_1_1_swap_chain_1acdd09c6dc0557d6b8889d360bfe169b6">00024</link> &#32;&#32;&#32;&#32;<link linkend="_class_blocky_vulkan_1_1_swap_chain_1acdd09c6dc0557d6b8889d360bfe169b6">SwapChain</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_blocky_vulkan_1_1_swap_chain">SwapChain</link>&#32;&amp;)&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
<anchor xml:id="_swap__chain_8hpp_source_1l00025"/><link linkend="_class_blocky_vulkan_1_1_swap_chain_1a432f19b5581e7a6b21863ccab37b4b64">00025</link> &#32;&#32;&#32;&#32;<link linkend="_class_blocky_vulkan_1_1_swap_chain">SwapChain</link>&#32;&amp;<link linkend="_class_blocky_vulkan_1_1_swap_chain_1a432f19b5581e7a6b21863ccab37b4b64">operator=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_blocky_vulkan_1_1_swap_chain">SwapChain</link>&#32;&amp;)&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
<anchor xml:id="_swap__chain_8hpp_source_1l00026"/>00026 
<anchor xml:id="_swap__chain_8hpp_source_1l00027"/><link linkend="_class_blocky_vulkan_1_1_swap_chain_1af2d854fd02a8a6afc18e9e9f331402e1">00027</link> &#32;&#32;&#32;&#32;VkFramebuffer&#32;<link linkend="_class_blocky_vulkan_1_1_swap_chain_1af2d854fd02a8a6afc18e9e9f331402e1">getFrameBuffer</link>(<emphasis role="keywordtype">int</emphasis>&#32;index)&#32;{
<anchor xml:id="_swap__chain_8hpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;swapChainFramebuffers[index];
<anchor xml:id="_swap__chain_8hpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;}
<anchor xml:id="_swap__chain_8hpp_source_1l00030"/><link linkend="_class_blocky_vulkan_1_1_swap_chain_1a067c98a8ea8b9573afa58ec31b61070b">00030</link> &#32;&#32;&#32;&#32;VkRenderPass&#32;<link linkend="_class_blocky_vulkan_1_1_swap_chain_1a067c98a8ea8b9573afa58ec31b61070b">getRenderPass</link>()&#32;{
<anchor xml:id="_swap__chain_8hpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;renderPass;
<anchor xml:id="_swap__chain_8hpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;}
<anchor xml:id="_swap__chain_8hpp_source_1l00033"/><link linkend="_class_blocky_vulkan_1_1_swap_chain_1a6d60b10858f53aa36103cb8ffdce5a89">00033</link> &#32;&#32;&#32;&#32;VkImageView&#32;<link linkend="_class_blocky_vulkan_1_1_swap_chain_1a6d60b10858f53aa36103cb8ffdce5a89">getImageView</link>(<emphasis role="keywordtype">int</emphasis>&#32;index)&#32;{
<anchor xml:id="_swap__chain_8hpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;swapChainImageViews[index];
<anchor xml:id="_swap__chain_8hpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;}
<anchor xml:id="_swap__chain_8hpp_source_1l00036"/><link linkend="_class_blocky_vulkan_1_1_swap_chain_1a65bf2dc77700ab941caec9ab15d82afa">00036</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_class_blocky_vulkan_1_1_swap_chain_1a65bf2dc77700ab941caec9ab15d82afa">imageCount</link>()&#32;{
<anchor xml:id="_swap__chain_8hpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;swapChainImages.size();
<anchor xml:id="_swap__chain_8hpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;}
<anchor xml:id="_swap__chain_8hpp_source_1l00039"/><link linkend="_class_blocky_vulkan_1_1_swap_chain_1a5bdf6b58fbb9b4ece8d2836e44c7bda2">00039</link> &#32;&#32;&#32;&#32;VkFormat&#32;<link linkend="_class_blocky_vulkan_1_1_swap_chain_1a5bdf6b58fbb9b4ece8d2836e44c7bda2">getSwapChainImageFormat</link>()&#32;{
<anchor xml:id="_swap__chain_8hpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;swapChainImageFormat;
<anchor xml:id="_swap__chain_8hpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;}
<anchor xml:id="_swap__chain_8hpp_source_1l00042"/><link linkend="_class_blocky_vulkan_1_1_swap_chain_1adc6458afc40ffae71d6ebe6b23f1d829">00042</link> &#32;&#32;&#32;&#32;VkExtent2D&#32;<link linkend="_class_blocky_vulkan_1_1_swap_chain_1adc6458afc40ffae71d6ebe6b23f1d829">getSwapChainExtent</link>()&#32;{
<anchor xml:id="_swap__chain_8hpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;swapChainExtent;
<anchor xml:id="_swap__chain_8hpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;}
<anchor xml:id="_swap__chain_8hpp_source_1l00045"/><link linkend="_class_blocky_vulkan_1_1_swap_chain_1a7734e42d1b5b2e7de41256950ffdd760">00045</link> &#32;&#32;&#32;&#32;uint32_t&#32;<link linkend="_class_blocky_vulkan_1_1_swap_chain_1a7734e42d1b5b2e7de41256950ffdd760">width</link>()&#32;{
<anchor xml:id="_swap__chain_8hpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;swapChainExtent.width;
<anchor xml:id="_swap__chain_8hpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;}
<anchor xml:id="_swap__chain_8hpp_source_1l00048"/><link linkend="_class_blocky_vulkan_1_1_swap_chain_1ad564ff4a410422918416004cbfb29e07">00048</link> &#32;&#32;&#32;&#32;uint32_t&#32;<link linkend="_class_blocky_vulkan_1_1_swap_chain_1ad564ff4a410422918416004cbfb29e07">height</link>()&#32;{
<anchor xml:id="_swap__chain_8hpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;swapChainExtent.height;
<anchor xml:id="_swap__chain_8hpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;}
<anchor xml:id="_swap__chain_8hpp_source_1l00051"/>00051 
<anchor xml:id="_swap__chain_8hpp_source_1l00052"/><link linkend="_class_blocky_vulkan_1_1_swap_chain_1aadd7e49801d654de56c68d9bec6aacfb">00052</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_class_blocky_vulkan_1_1_swap_chain_1aadd7e49801d654de56c68d9bec6aacfb">extentAspectRatio</link>()&#32;{
<anchor xml:id="_swap__chain_8hpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">float</emphasis><emphasis role="keyword">&gt;</emphasis>(swapChainExtent.width)&#32;/
<anchor xml:id="_swap__chain_8hpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">float</emphasis><emphasis role="keyword">&gt;</emphasis>(swapChainExtent.height);
<anchor xml:id="_swap__chain_8hpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;}
<anchor xml:id="_swap__chain_8hpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;VkFormat&#32;<link linkend="_class_blocky_vulkan_1_1_swap_chain_1a032370066d55a3da18dfcb8ff25bd634">findDepthFormat</link>();
<anchor xml:id="_swap__chain_8hpp_source_1l00057"/>00057 
<anchor xml:id="_swap__chain_8hpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;VkResult&#32;<link linkend="_class_blocky_vulkan_1_1_swap_chain_1a649d6c6cca871c742e5b7fa90f0cb50e">acquireNextImage</link>(uint32_t&#32;*imageIndex);
<anchor xml:id="_swap__chain_8hpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;VkResult&#32;<link linkend="_class_blocky_vulkan_1_1_swap_chain_1a78bbedddd61a8befbe772baf46f2bc9b">submitCommandBuffers</link>(<emphasis role="keyword">const</emphasis>&#32;VkCommandBuffer&#32;*buffers,
<anchor xml:id="_swap__chain_8hpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint32_t&#32;*imageIndex);
<anchor xml:id="_swap__chain_8hpp_source_1l00061"/>00061 
<anchor xml:id="_swap__chain_8hpp_source_1l00062"/>00062 &#32;&#32;<emphasis role="keyword">private</emphasis>:
<anchor xml:id="_swap__chain_8hpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Init();
<anchor xml:id="_swap__chain_8hpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;createSwapChain();
<anchor xml:id="_swap__chain_8hpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;createImageViews();
<anchor xml:id="_swap__chain_8hpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;createDepthResources();
<anchor xml:id="_swap__chain_8hpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;createRenderPass();
<anchor xml:id="_swap__chain_8hpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;createFramebuffers();
<anchor xml:id="_swap__chain_8hpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;createSyncObjects();
<anchor xml:id="_swap__chain_8hpp_source_1l00070"/>00070 
<anchor xml:id="_swap__chain_8hpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Helper&#32;functions</emphasis>
<anchor xml:id="_swap__chain_8hpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;VkSurfaceFormatKHR&#32;chooseSwapSurfaceFormat(
<anchor xml:id="_swap__chain_8hpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;VkSurfaceFormatKHR&gt;&#32;&amp;availableFormats);
<anchor xml:id="_swap__chain_8hpp_source_1l00074"/>00074 &#32;&#32;&#32;&#32;VkPresentModeKHR&#32;chooseSwapPresentMode(
<anchor xml:id="_swap__chain_8hpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;VkPresentModeKHR&gt;&#32;&amp;availablePresentModes);
<anchor xml:id="_swap__chain_8hpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;VkExtent2D&#32;chooseSwapExtent(<emphasis role="keyword">const</emphasis>&#32;VkSurfaceCapabilitiesKHR&#32;&amp;capabilities);
<anchor xml:id="_swap__chain_8hpp_source_1l00077"/>00077 
<anchor xml:id="_swap__chain_8hpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;VkFormat&#32;swapChainImageFormat;
<anchor xml:id="_swap__chain_8hpp_source_1l00079"/>00079 &#32;&#32;&#32;&#32;VkExtent2D&#32;swapChainExtent;
<anchor xml:id="_swap__chain_8hpp_source_1l00080"/>00080 
<anchor xml:id="_swap__chain_8hpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;std::vector&lt;VkFramebuffer&gt;&#32;swapChainFramebuffers;
<anchor xml:id="_swap__chain_8hpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;VkRenderPass&#32;renderPass;
<anchor xml:id="_swap__chain_8hpp_source_1l00083"/>00083 
<anchor xml:id="_swap__chain_8hpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;std::vector&lt;VkImage&gt;&#32;depthImages;
<anchor xml:id="_swap__chain_8hpp_source_1l00085"/>00085 &#32;&#32;&#32;&#32;std::vector&lt;VkDeviceMemory&gt;&#32;depthImageMemorys;
<anchor xml:id="_swap__chain_8hpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;std::vector&lt;VkImageView&gt;&#32;depthImageViews;
<anchor xml:id="_swap__chain_8hpp_source_1l00087"/>00087 &#32;&#32;&#32;&#32;std::vector&lt;VkImage&gt;&#32;swapChainImages;
<anchor xml:id="_swap__chain_8hpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;std::vector&lt;VkImageView&gt;&#32;swapChainImageViews;
<anchor xml:id="_swap__chain_8hpp_source_1l00089"/>00089 
<anchor xml:id="_swap__chain_8hpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;<link linkend="_class_blocky_vulkan_1_1_device">Device</link>&#32;&amp;device;
<anchor xml:id="_swap__chain_8hpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;VkExtent2D&#32;windowExtent;
<anchor xml:id="_swap__chain_8hpp_source_1l00092"/>00092 
<anchor xml:id="_swap__chain_8hpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;VkSwapchainKHR&#32;swapChain;
<anchor xml:id="_swap__chain_8hpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;std::shared_ptr&lt;SwapChain&gt;&#32;oldSwapChain;
<anchor xml:id="_swap__chain_8hpp_source_1l00095"/>00095 
<anchor xml:id="_swap__chain_8hpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;std::vector&lt;VkSemaphore&gt;&#32;imageAvailableSemaphores;
<anchor xml:id="_swap__chain_8hpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;std::vector&lt;VkSemaphore&gt;&#32;renderFinishedSemaphores;
<anchor xml:id="_swap__chain_8hpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;std::vector&lt;VkFence&gt;&#32;inFlightFences;
<anchor xml:id="_swap__chain_8hpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;std::vector&lt;VkFence&gt;&#32;imagesInFlight;
<anchor xml:id="_swap__chain_8hpp_source_1l00100"/>00100 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;currentFrame&#32;=&#32;0;
<anchor xml:id="_swap__chain_8hpp_source_1l00101"/>00101 };
<anchor xml:id="_swap__chain_8hpp_source_1l00102"/>00102 
<anchor xml:id="_swap__chain_8hpp_source_1l00103"/>00103 }&#32;&#32;<emphasis role="comment">//&#32;namespace&#32;BlockyVulkan</emphasis>
</programlisting></section>
