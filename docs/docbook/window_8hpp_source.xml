<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_window_8hpp_source" xml:lang="en-US">
<title>window.hpp</title>
<indexterm><primary>src/window/window.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_window_8hpp_source_1l00001"/>00001 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
<anchor xml:id="_window_8hpp_source_1l00002"/>00002 
<anchor xml:id="_window_8hpp_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&lt;vulkan/vulkan.h&gt;</emphasis>
<anchor xml:id="_window_8hpp_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&lt;GLFW/glfw3.h&gt;</emphasis>
<anchor xml:id="_window_8hpp_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
<anchor xml:id="_window_8hpp_source_1l00006"/>00006 <emphasis role="preprocessor">#include&#32;&lt;GLFW/glfw3.h&gt;</emphasis>
<anchor xml:id="_window_8hpp_source_1l00007"/>00007 
<anchor xml:id="_window_8hpp_source_1l00008"/>00008 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_blocky_vulkan">BlockyVulkan</link>&#32;{
<anchor xml:id="_window_8hpp_source_1l00009"/>00009 
<anchor xml:id="_window_8hpp_source_1l00010"/><link linkend="_class_blocky_vulkan_1_1_window">00010</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_blocky_vulkan_1_1_window">Window</link>&#32;{
<anchor xml:id="_window_8hpp_source_1l00011"/>00011 &#32;&#32;<emphasis role="keyword">public</emphasis>:
<anchor xml:id="_window_8hpp_source_1l00012"/>00012 &#32;&#32;&#32;&#32;<link linkend="_class_blocky_vulkan_1_1_window_1a8e9aec6037e2788564d22151d08c7baf">Window</link>(&#32;<emphasis role="keywordtype">int</emphasis>&#32;w,&#32;<emphasis role="keywordtype">int</emphasis>&#32;h,&#32;std::string&#32;name&#32;);
<anchor xml:id="_window_8hpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;<link linkend="_class_blocky_vulkan_1_1_window_1a2cee7976fcb8feddc70c346ac300e940">~Window</link>();
<anchor xml:id="_window_8hpp_source_1l00014"/>00014 
<anchor xml:id="_window_8hpp_source_1l00015"/><link linkend="_class_blocky_vulkan_1_1_window_1a6e7eb3b0adfb60564df5db025a10f309">00015</link> &#32;&#32;&#32;&#32;<link linkend="_class_blocky_vulkan_1_1_window_1a6e7eb3b0adfb60564df5db025a10f309">Window</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_blocky_vulkan_1_1_window">Window</link>&#32;&amp;&#32;)&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
<anchor xml:id="_window_8hpp_source_1l00016"/><link linkend="_class_blocky_vulkan_1_1_window_1a87195df9b3d0616dbc9b42b042b94c29">00016</link> &#32;&#32;&#32;&#32;<link linkend="_class_blocky_vulkan_1_1_window">Window</link>&#32;&amp;<link linkend="_class_blocky_vulkan_1_1_window_1a87195df9b3d0616dbc9b42b042b94c29">operator = </link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_blocky_vulkan_1_1_window">Window</link>&#32;&amp;&#32;)&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
<anchor xml:id="_window_8hpp_source_1l00017"/>00017 
<anchor xml:id="_window_8hpp_source_1l00018"/><link linkend="_class_blocky_vulkan_1_1_window_1a9ff4c2b5e9d07acc9eb5454ffcdb4ff5">00018</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_blocky_vulkan_1_1_window_1a9ff4c2b5e9d07acc9eb5454ffcdb4ff5">ShouldClose</link>()&#32;{
<anchor xml:id="_window_8hpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;glfwWindowShouldClose(&#32;window&#32;);
<anchor xml:id="_window_8hpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;}
<anchor xml:id="_window_8hpp_source_1l00021"/><link linkend="_class_blocky_vulkan_1_1_window_1aad516780cfcfdf75091ac30465d28072">00021</link> &#32;&#32;&#32;&#32;VkExtent2D&#32;<link linkend="_class_blocky_vulkan_1_1_window_1aad516780cfcfdf75091ac30465d28072">getExtend</link>()&#32;{
<anchor xml:id="_window_8hpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;{&#32;<emphasis role="keyword">static_cast&lt;</emphasis>uint32_t<emphasis role="keyword">&gt;</emphasis>(width),&#32;<emphasis role="keyword">static_cast&lt;</emphasis>uint32_t<emphasis role="keyword">&gt;</emphasis>(height)&#32;};
<anchor xml:id="_window_8hpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;}
<anchor xml:id="_window_8hpp_source_1l00024"/><link linkend="_class_blocky_vulkan_1_1_window_1a212571d9aceb5c39a5c3351f49693d8a">00024</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_class_blocky_vulkan_1_1_window_1a212571d9aceb5c39a5c3351f49693d8a">WasWindowResized</link>()&#32;{
<anchor xml:id="_window_8hpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;frameBufferResized;
<anchor xml:id="_window_8hpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;}
<anchor xml:id="_window_8hpp_source_1l00027"/><link linkend="_class_blocky_vulkan_1_1_window_1a0f31e90160d16c1ed8e86ab99276432e">00027</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_blocky_vulkan_1_1_window_1a0f31e90160d16c1ed8e86ab99276432e">ResetFlag_WindowResized</link>()&#32;{
<anchor xml:id="_window_8hpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;frameBufferResized&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_window_8hpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;}
<anchor xml:id="_window_8hpp_source_1l00030"/>00030 
<anchor xml:id="_window_8hpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_blocky_vulkan_1_1_window_1a96d585feaed2d71904c337611dc935d6">CreateWindowSurface</link>(&#32;VkInstance&#32;instance,&#32;VkSurfaceKHR&#32;*surface&#32;);
<anchor xml:id="_window_8hpp_source_1l00032"/>00032 
<anchor xml:id="_window_8hpp_source_1l00033"/>00033 &#32;&#32;<emphasis role="keyword">private</emphasis>:
<anchor xml:id="_window_8hpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;FrameBufferResizeCallback(&#32;GLFWwindow&#32;*window,&#32;<emphasis role="keywordtype">int</emphasis>&#32;width,&#32;<emphasis role="keywordtype">int</emphasis>&#32;height&#32;);
<anchor xml:id="_window_8hpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;InitWindow();
<anchor xml:id="_window_8hpp_source_1l00036"/>00036 
<anchor xml:id="_window_8hpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;width;
<anchor xml:id="_window_8hpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;height;
<anchor xml:id="_window_8hpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;frameBufferResized;
<anchor xml:id="_window_8hpp_source_1l00040"/>00040 
<anchor xml:id="_window_8hpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;std::string&#32;name;
<anchor xml:id="_window_8hpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;GLFWwindow&#32;*window;
<anchor xml:id="_window_8hpp_source_1l00043"/>00043 };
<anchor xml:id="_window_8hpp_source_1l00044"/>00044 }
</programlisting></section>
