<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_model_8hpp_source" xml:lang="en-US">
<title>model.hpp</title>
<indexterm><primary>src/model/model.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_model_8hpp_source_1l00001"/>00001 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
<anchor xml:id="_model_8hpp_source_1l00002"/>00002 
<anchor xml:id="_model_8hpp_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_device_8hpp">../device/device.hpp</link>&quot;</emphasis>
<anchor xml:id="_model_8hpp_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&lt;vulkan/vulkan.h&gt;</emphasis>
<anchor xml:id="_model_8hpp_source_1l00005"/>00005 
<anchor xml:id="_model_8hpp_source_1l00006"/><link linkend="_model_8hpp_1a816ab7d5c2ce1f0a01216042837beb93">00006</link> <emphasis role="preprocessor">#define&#32;GLM_FORCE_RADIANS&#32;</emphasis><emphasis role="comment">//&#32;forcing&#32;radians&#32;instead&#32;of&#32;degrees&#32;(no&#32;matter&#32;your&#32;os&#32;settings)</emphasis>
<anchor xml:id="_model_8hpp_source_1l00007"/><link linkend="_model_8hpp_1aa53e0967978ad7a8792f6961156ec968">00007</link> <emphasis role="preprocessor">#define&#32;GLM_FORCE_DEPTH_ZERO_TO_ONE&#32;</emphasis><emphasis role="comment">//&#32;forcing&#32;depth&#32;to&#32;be&#32;from&#32;0&#32;to&#32;1</emphasis>
<anchor xml:id="_model_8hpp_source_1l00008"/>00008 <emphasis role="preprocessor">#include&#32;&lt;glm/glm.hpp&gt;</emphasis>
<anchor xml:id="_model_8hpp_source_1l00009"/>00009 <emphasis role="preprocessor">#include&#32;&lt;vector&gt;</emphasis>
<anchor xml:id="_model_8hpp_source_1l00010"/>00010 
<anchor xml:id="_model_8hpp_source_1l00011"/>00011 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_blocky_vulkan">BlockyVulkan</link>&#32;{
<anchor xml:id="_model_8hpp_source_1l00012"/>00012 
<anchor xml:id="_model_8hpp_source_1l00013"/><link linkend="_class_blocky_vulkan_1_1_model">00013</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_blocky_vulkan_1_1_model">Model</link>&#32;{
<anchor xml:id="_model_8hpp_source_1l00014"/>00014 
<anchor xml:id="_model_8hpp_source_1l00015"/>00015 &#32;&#32;<emphasis role="keyword">public</emphasis>:
<anchor xml:id="_model_8hpp_source_1l00016"/>00016 
<anchor xml:id="_model_8hpp_source_1l00017"/><link linkend="_struct_blocky_vulkan_1_1_model_1_1_vertex">00017</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_blocky_vulkan_1_1_model_1_1_vertex">Vertex</link>&#32;{
<anchor xml:id="_model_8hpp_source_1l00018"/><link linkend="_struct_blocky_vulkan_1_1_model_1_1_vertex_1a4ebaf6fe341d4c2e52df4e2cb95cc4d9">00018</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec2&#32;<link linkend="_struct_blocky_vulkan_1_1_model_1_1_vertex_1a4ebaf6fe341d4c2e52df4e2cb95cc4d9">position</link>;
<anchor xml:id="_model_8hpp_source_1l00019"/><link linkend="_struct_blocky_vulkan_1_1_model_1_1_vertex_1a2cfb97fb9722bc638db592a1bc61cf7b">00019</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec3&#32;<link linkend="_struct_blocky_vulkan_1_1_model_1_1_vertex_1a2cfb97fb9722bc638db592a1bc61cf7b">color</link>;
<anchor xml:id="_model_8hpp_source_1l00020"/>00020 
<anchor xml:id="_model_8hpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;std::vector&lt;VkVertexInputBindingDescription&gt;&#32;<link linkend="_struct_blocky_vulkan_1_1_model_1_1_vertex_1a97a92a1265877fff2f287b07d0ac9db4">GetBindingDescriptions</link>();
<anchor xml:id="_model_8hpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;std::vector&lt;VkVertexInputAttributeDescription&gt;&#32;<link linkend="_struct_blocky_vulkan_1_1_model_1_1_vertex_1afb7939bc1d098cd9d72f99a95a14ed72">GetAttributeDescriptions</link>();
<anchor xml:id="_model_8hpp_source_1l00023"/>00023 
<anchor xml:id="_model_8hpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;};
<anchor xml:id="_model_8hpp_source_1l00025"/>00025 
<anchor xml:id="_model_8hpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;<link linkend="_class_blocky_vulkan_1_1_model_1a3160d503440410109ba049e8501fc1b1">Model</link>(<link linkend="_class_blocky_vulkan_1_1_device">Device</link>&#32;&amp;device,&#32;<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;Vertex&gt;&#32;&amp;verticies&#32;);
<anchor xml:id="_model_8hpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<link linkend="_class_blocky_vulkan_1_1_model_1a130ba2bea277851e74b0603e6edf2135">~Model</link>();
<anchor xml:id="_model_8hpp_source_1l00028"/>00028 
<anchor xml:id="_model_8hpp_source_1l00029"/><link linkend="_class_blocky_vulkan_1_1_model_1ab07f0b65355ee225b7e827b030840752">00029</link> &#32;&#32;&#32;&#32;<link linkend="_class_blocky_vulkan_1_1_model_1ab07f0b65355ee225b7e827b030840752">Model</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_blocky_vulkan_1_1_model">Model</link>&#32;&amp;&#32;)&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
<anchor xml:id="_model_8hpp_source_1l00030"/><link linkend="_class_blocky_vulkan_1_1_model_1a938c9508055ee973569a678f0e7b3243">00030</link> &#32;&#32;&#32;&#32;<link linkend="_class_blocky_vulkan_1_1_model">Model</link>&#32;&amp;<link linkend="_class_blocky_vulkan_1_1_model_1a938c9508055ee973569a678f0e7b3243">operator = </link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_blocky_vulkan_1_1_model">Model</link>&#32;&amp;&#32;)&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
<anchor xml:id="_model_8hpp_source_1l00031"/>00031 
<anchor xml:id="_model_8hpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_blocky_vulkan_1_1_model_1ab268beca056e5766fc4fe330baaea064">Bind</link>(&#32;VkCommandBuffer&#32;commandBuffer&#32;);
<anchor xml:id="_model_8hpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_blocky_vulkan_1_1_model_1a4535c857dd2caa03f6cca44778ec7712">Draw</link>(&#32;VkCommandBuffer&#32;commandBuffer&#32;);
<anchor xml:id="_model_8hpp_source_1l00034"/>00034 
<anchor xml:id="_model_8hpp_source_1l00035"/>00035 &#32;&#32;<emphasis role="keyword">private</emphasis>:
<anchor xml:id="_model_8hpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;CreateVertexBuffers(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;Vertex&gt;&#32;&amp;verticies);
<anchor xml:id="_model_8hpp_source_1l00037"/>00037 
<anchor xml:id="_model_8hpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<link linkend="_class_blocky_vulkan_1_1_device">Device</link>&#32;&amp;device;
<anchor xml:id="_model_8hpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;VkBuffer&#32;vertexBuffer;
<anchor xml:id="_model_8hpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;VkDeviceMemory&#32;vertexBufferMemory;
<anchor xml:id="_model_8hpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;uint32_t&#32;vertexCount;
<anchor xml:id="_model_8hpp_source_1l00042"/>00042 };
<anchor xml:id="_model_8hpp_source_1l00043"/>00043 }
</programlisting></section>
