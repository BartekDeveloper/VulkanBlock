<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_pipeline_8hpp_source" xml:lang="en-US">
<title>pipeline.hpp</title>
<indexterm><primary>src/pipeline/pipeline.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_pipeline_8hpp_source_1l00001"/>00001 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
<anchor xml:id="_pipeline_8hpp_source_1l00002"/>00002 
<anchor xml:id="_pipeline_8hpp_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_device_8hpp">../device/device.hpp</link>&quot;</emphasis>
<anchor xml:id="_pipeline_8hpp_source_1l00004"/>00004 
<anchor xml:id="_pipeline_8hpp_source_1l00005"/>00005 
<anchor xml:id="_pipeline_8hpp_source_1l00006"/>00006 <emphasis role="comment">//&#32;std</emphasis>
<anchor xml:id="_pipeline_8hpp_source_1l00007"/>00007 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
<anchor xml:id="_pipeline_8hpp_source_1l00008"/>00008 <emphasis role="preprocessor">#include&#32;&lt;vector&gt;</emphasis>
<anchor xml:id="_pipeline_8hpp_source_1l00009"/>00009 
<anchor xml:id="_pipeline_8hpp_source_1l00010"/>00010 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_blocky_vulkan">BlockyVulkan</link>&#32;{
<anchor xml:id="_pipeline_8hpp_source_1l00011"/>00011 
<anchor xml:id="_pipeline_8hpp_source_1l00012"/><link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info">00012</link> <emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info">PipelineConfigInfo</link>&#32;{
<anchor xml:id="_pipeline_8hpp_source_1l00013"/><link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info_1a60b8d16412bc257ee75ea324a8dd654a">00013</link> &#32;&#32;&#32;&#32;<link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info_1a60b8d16412bc257ee75ea324a8dd654a">PipelineConfigInfo</link>()&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
<anchor xml:id="_pipeline_8hpp_source_1l00014"/><link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info_1aeac9c6298a89cabb0f3a46537b705b2e">00014</link> &#32;&#32;&#32;&#32;<link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info">PipelineConfigInfo</link>&#32;&amp;<link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info_1aeac9c6298a89cabb0f3a46537b705b2e">operator=</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info">PipelineConfigInfo</link>&#32;&amp;&#32;)&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
<anchor xml:id="_pipeline_8hpp_source_1l00015"/>00015 
<anchor xml:id="_pipeline_8hpp_source_1l00016"/><link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info_1abf9d4590b94afc9da9222a8b86805a4c">00016</link> &#32;&#32;&#32;&#32;VkPipelineViewportStateCreateInfo&#32;<link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info_1abf9d4590b94afc9da9222a8b86805a4c">viewportInfo</link>;
<anchor xml:id="_pipeline_8hpp_source_1l00017"/><link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info_1af79d02ca54f050415f818df3ff5140a6">00017</link> &#32;&#32;&#32;&#32;VkPipelineInputAssemblyStateCreateInfo&#32;<link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info_1af79d02ca54f050415f818df3ff5140a6">inputAssemblyInfo</link>;
<anchor xml:id="_pipeline_8hpp_source_1l00018"/><link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info_1a49e68fcfec16e572277de541a84c0086">00018</link> &#32;&#32;&#32;&#32;VkPipelineRasterizationStateCreateInfo&#32;<link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info_1a49e68fcfec16e572277de541a84c0086">rasterizationInfo</link>;
<anchor xml:id="_pipeline_8hpp_source_1l00019"/><link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info_1af2749bee4dc10bb630639892e5839c70">00019</link> &#32;&#32;&#32;&#32;VkPipelineMultisampleStateCreateInfo&#32;<link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info_1af2749bee4dc10bb630639892e5839c70">multisampleInfo</link>;
<anchor xml:id="_pipeline_8hpp_source_1l00020"/><link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info_1a2dcfd03ff283e7ef7ba256c2cd2a7010">00020</link> &#32;&#32;&#32;&#32;VkPipelineColorBlendStateCreateInfo&#32;<link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info_1a2dcfd03ff283e7ef7ba256c2cd2a7010">colorBlendInfo</link>;
<anchor xml:id="_pipeline_8hpp_source_1l00021"/><link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info_1ae5ebd9012649adcbe2fdb35b896a3e87">00021</link> &#32;&#32;&#32;&#32;VkPipelineDepthStencilStateCreateInfo&#32;<link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info_1ae5ebd9012649adcbe2fdb35b896a3e87">depthStencilInfo</link>;
<anchor xml:id="_pipeline_8hpp_source_1l00022"/>00022 
<anchor xml:id="_pipeline_8hpp_source_1l00023"/><link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info_1ace48c96bcff001251bd0ab9a6c28ee06">00023</link> &#32;&#32;&#32;&#32;VkPipelineColorBlendAttachmentState&#32;<link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info_1ace48c96bcff001251bd0ab9a6c28ee06">colorBlendAttachment</link>;
<anchor xml:id="_pipeline_8hpp_source_1l00024"/>00024 
<anchor xml:id="_pipeline_8hpp_source_1l00025"/><link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info_1ac754f6d94c8df9b55641efabec67c5f6">00025</link> &#32;&#32;&#32;&#32;std::vector&lt;VkDynamicState&gt;&#32;<link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info_1ac754f6d94c8df9b55641efabec67c5f6">dynamicStateEnables</link>;
<anchor xml:id="_pipeline_8hpp_source_1l00026"/><link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info_1a698beed88b6819a26b0e4650ed8d0210">00026</link> &#32;&#32;&#32;&#32;VkPipelineDynamicStateCreateInfo&#32;<link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info_1a698beed88b6819a26b0e4650ed8d0210">dynamicStateInfo</link>;
<anchor xml:id="_pipeline_8hpp_source_1l00027"/>00027 
<anchor xml:id="_pipeline_8hpp_source_1l00028"/><link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info_1acfca5f8d78fcb895055b09d8819d9030">00028</link> &#32;&#32;&#32;&#32;VkPipelineLayout&#32;<link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info_1acfca5f8d78fcb895055b09d8819d9030">pipelineLayout</link>&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="_pipeline_8hpp_source_1l00029"/><link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info_1a9dc36f73322973991b76c50e1699b221">00029</link> &#32;&#32;&#32;&#32;VkRenderPass&#32;<link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info_1a9dc36f73322973991b76c50e1699b221">renderPass</link>&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="_pipeline_8hpp_source_1l00030"/><link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info_1ac218e5086d951b33f2f056e54bcdfc2d">00030</link> &#32;&#32;&#32;&#32;uint32_t&#32;<link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info_1ac218e5086d951b33f2f056e54bcdfc2d">subpass</link>&#32;=&#32;0;
<anchor xml:id="_pipeline_8hpp_source_1l00031"/>00031 };
<anchor xml:id="_pipeline_8hpp_source_1l00032"/>00032 
<anchor xml:id="_pipeline_8hpp_source_1l00033"/><link linkend="_class_blocky_vulkan_1_1_pipeline">00033</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_blocky_vulkan_1_1_pipeline">Pipeline</link>&#32;{
<anchor xml:id="_pipeline_8hpp_source_1l00034"/>00034 &#32;&#32;<emphasis role="keyword">public</emphasis>:
<anchor xml:id="_pipeline_8hpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;<link linkend="_class_blocky_vulkan_1_1_pipeline_1addb66f814dfdcf5ab9e8c1c394e95abb">Pipeline</link>(<link linkend="_class_blocky_vulkan_1_1_device">Device</link>&#32;&amp;device,&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;vertFilePath,
<anchor xml:id="_pipeline_8hpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;fragFilePath,
<anchor xml:id="_pipeline_8hpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info">PipelineConfigInfo</link>&#32;configInfo);
<anchor xml:id="_pipeline_8hpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<link linkend="_class_blocky_vulkan_1_1_pipeline_1a6bd38169705e7b71be2ce6300e8c3cab">~Pipeline</link>();
<anchor xml:id="_pipeline_8hpp_source_1l00039"/>00039 
<anchor xml:id="_pipeline_8hpp_source_1l00040"/><link linkend="_class_blocky_vulkan_1_1_pipeline_1a3cdd84b75f6effbfe5d4745e4c003309">00040</link> &#32;&#32;&#32;&#32;<link linkend="_class_blocky_vulkan_1_1_pipeline_1a3cdd84b75f6effbfe5d4745e4c003309">Pipeline</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_blocky_vulkan_1_1_pipeline">Pipeline</link>&#32;&amp;&#32;)&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
<anchor xml:id="_pipeline_8hpp_source_1l00041"/><link linkend="_class_blocky_vulkan_1_1_pipeline_1ad6f9140fd5c52c470922b6416c160b03">00041</link> &#32;&#32;&#32;&#32;<link linkend="_class_blocky_vulkan_1_1_pipeline">Pipeline</link>&#32;&amp;<link linkend="_class_blocky_vulkan_1_1_pipeline_1ad6f9140fd5c52c470922b6416c160b03">operator=</link>(&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_blocky_vulkan_1_1_pipeline">Pipeline</link>&#32;&amp;&#32;)&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
<anchor xml:id="_pipeline_8hpp_source_1l00042"/><link linkend="_class_blocky_vulkan_1_1_pipeline_1addb66f814dfdcf5ab9e8c1c394e95abb">00042</link> &#32;&#32;&#32;&#32;<link linkend="_class_blocky_vulkan_1_1_pipeline_1addb66f814dfdcf5ab9e8c1c394e95abb">Pipeline</link>()&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
<anchor xml:id="_pipeline_8hpp_source_1l00043"/>00043 
<anchor xml:id="_pipeline_8hpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_blocky_vulkan_1_1_pipeline_1a790267c38cf3e3a95cde697d4c88be51">Bind</link>(&#32;VkCommandBuffer&#32;commandBuffer&#32;);
<anchor xml:id="_pipeline_8hpp_source_1l00045"/>00045 
<anchor xml:id="_pipeline_8hpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_blocky_vulkan_1_1_pipeline_1a921ac3065459aee5818a300bb87e8eed">DefaultPipelineConfigInfo</link>(<link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info">PipelineConfigInfo</link>&#32;&amp;configInfo);
<anchor xml:id="_pipeline_8hpp_source_1l00047"/>00047 
<anchor xml:id="_pipeline_8hpp_source_1l00048"/>00048 &#32;&#32;<emphasis role="keyword">private</emphasis>:
<anchor xml:id="_pipeline_8hpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;std::vector&lt;char&gt;&#32;ReadFile(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;filePath);
<anchor xml:id="_pipeline_8hpp_source_1l00050"/>00050 
<anchor xml:id="_pipeline_8hpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;CreateGraphicsPipeline(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;vertFilePath,
<anchor xml:id="_pipeline_8hpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;fragFilePath,
<anchor xml:id="_pipeline_8hpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_blocky_vulkan_1_1_pipeline_config_info">PipelineConfigInfo</link>&#32;&amp;configInfo);
<anchor xml:id="_pipeline_8hpp_source_1l00054"/>00054 
<anchor xml:id="_pipeline_8hpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;CreateShaderModule(&#32;<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;char&gt;&#32;&amp;code,&#32;VkShaderModule&#32;*shaderModule&#32;);
<anchor xml:id="_pipeline_8hpp_source_1l00056"/>00056 
<anchor xml:id="_pipeline_8hpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;<link linkend="_class_blocky_vulkan_1_1_device">Device</link>&#32;&amp;<link linkend="_class_blocky_vulkan_1_1_device">Device</link>;
<anchor xml:id="_pipeline_8hpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;VkPipeline&#32;graphicsPipeline;
<anchor xml:id="_pipeline_8hpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;VkShaderModule&#32;vertShaderModule;
<anchor xml:id="_pipeline_8hpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;VkShaderModule&#32;fragShaderModule;
<anchor xml:id="_pipeline_8hpp_source_1l00061"/>00061 
<anchor xml:id="_pipeline_8hpp_source_1l00062"/>00062 };
<anchor xml:id="_pipeline_8hpp_source_1l00063"/>00063 }&#32;&#32;<emphasis role="comment">//&#32;namespace&#32;BlockyVulkan</emphasis>
</programlisting></section>
